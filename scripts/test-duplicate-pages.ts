import 'dotenv/config';

// Fonction de test pour la d√©tection de pages dupliqu√©es
function testDuplicatePagesDetection() {
  console.log('üß™ Test de d√©tection de pages dupliqu√©es');
  console.log('==========================================');

  // Test avec des pages dupliqu√©es
  const duplicatePayslipText = `
    Recibo de Pagamento de Sal√°rio
    Empresa: Tech Corp Ltda
    Funcion√°rio: Jo√£o Silva
    Cargo: Desenvolvedor
    Per√≠odo: Janeiro 2024
    SAL√ÅRIO BRUTO: R$ 5.000,00
    SAL√ÅRIO L√çQUIDO: R$ 3.800,00
    DESCONTOS: R$ 1.200,00
    
    Recibo de Pagamento de Sal√°rio
    Empresa: Tech Corp Ltda
    Funcion√°rio: Maria Santos
    Cargo: Analista
    Per√≠odo: Janeiro 2024
    SAL√ÅRIO BRUTO: R$ 4.000,00
    SAL√ÅRIO L√çQUIDO: R$ 3.200,00
    DESCONTOS: R$ 800,00
  `;

  console.log('üìÅ Test avec pages dupliqu√©es');
  console.log('üìÑ Contenu original:');
  console.log(duplicatePayslipText);
  console.log();

  // Simuler la d√©tection de pages dupliqu√©es
  console.log('üîç Test d√©tection de pages dupliqu√©es...');
  
  const textLower = duplicatePayslipText.toLowerCase();
  
  // Mots-cl√©s qui indiquent le d√©but d'une feuille de paie
  const payslipStartKeywords = [
    'recibo de pagamento de sal√°rio',
    'comprovante de pagamento',
    'holerite',
    'contracheque',
    'bulletin de paie',
    'salaire',
    'paiement'
  ];
  
  // Chercher les occurrences multiples
  const occurrences: number[] = [];
  payslipStartKeywords.forEach(keyword => {
    let index = textLower.indexOf(keyword);
    while (index !== -1) {
      occurrences.push(index);
      index = textLower.indexOf(keyword, index + 1);
    }
  });
  
  // Trier les occurrences par position
  occurrences.sort((a, b) => a - b);
  
  console.log('üîç Occurrences trouv√©es:', occurrences);
  console.log('üìä Positions:', occurrences.map(pos => `${pos}: "${duplicatePayslipText.substring(pos, pos + 30)}..."`));
  
  if (occurrences.length > 1) {
    console.log('üîÑ P√°ginas duplicadas detectadas:', occurrences.length, 'ocorr√™ncias');
    
    // Prendre la premi√®re occurrence (la plus petite position)
    const firstOccurrence = occurrences[0];
    
    // Chercher la fin de la premi√®re feuille de paie
    let endOfFirstPayslip = duplicatePayslipText.length;
    
    // Chercher le d√©but de la deuxi√®me occurrence
    if (occurrences.length > 1) {
      endOfFirstPayslip = occurrences[1];
    }
    
    // Extraire seulement la premi√®re feuille de paie
    const processedText = duplicatePayslipText.substring(firstOccurrence, endOfFirstPayslip);
    
    console.log('‚úÖ Primeira p√°gina extra√≠da:');
    console.log(processedText);
    console.log();
    
    console.log('üìä Estat√≠sticas:');
    console.log('- Texto original:', duplicatePayslipText.length, 'caracteres');
    console.log('- Texto processado:', processedText.length, 'caracteres');
    console.log('- Redu√ß√£o:', Math.round((1 - processedText.length / duplicatePayslipText.length) * 100), '%');
    
  } else {
    console.log('‚úÖ Nenhuma p√°gina duplicada detectada');
  }

  console.log('‚úÖ Test termin√©');
}

testDuplicatePagesDetection(); 