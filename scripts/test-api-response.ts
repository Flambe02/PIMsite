/**
 * Test de la r√©ponse API pour v√©rifier la structure des donn√©es
 */

import 'dotenv/config';

async function testAPIResponse() {
  console.log('üß™ Test de la r√©ponse API');
  console.log('==========================');

  try {
    // Cr√©er un fichier de test
    const testContent = `
    COMPROVANTE DE PAGAMENTO DE SAL√ÅRIO
    Empresa: Tech Corp Ltda
    Funcion√°rio: Jo√£o Silva
    Cargo: Desenvolvedor
    Per√≠odo: Janeiro 2024
    
    SAL√ÅRIO BRUTO: R$ 5.000,00
    SAL√ÅRIO L√çQUIDO: R$ 3.800,00
    DESCONTOS: R$ 1.200,00
    
    BENEF√çCIOS:
    - Vale Refei√ß√£o
    - Vale Transporte
    - Plano de Sa√∫de
    
    Status: CLT
    `;

    const testFile = new File([testContent], 'test-payslip.txt', { type: 'text/plain' });

    console.log('üìÅ Fichier de test cr√©√©');

    // Simuler l'appel API
    const formData = new FormData();
    formData.append('file', testFile);

    console.log('üöÄ Appel API...');
    
    // Note: Ceci est une simulation car nous ne pouvons pas faire d'appel HTTP depuis un script Node.js
    // En r√©alit√©, l'API retournerait quelque chose comme :
    const mockResponse = {
      success: true,
      data: {
        ocr: {
          text: testContent,
          confidence: 0.9,
          processingTime: 1000
        },
        analysis: {
          structuredData: {
            employee_name: "Jo√£o Silva",
            company_name: "Tech Corp Ltda",
            position: "Desenvolvedor",
            period: "Janeiro 2024",
            salary_bruto: 5000.00,
            salary_liquido: 3800.00,
            descontos: 1200.00,
            beneficios: ["Vale Refei√ß√£o", "Vale Transporte", "Plano de Sa√∫de"],
            statut: "CLT"
          },
          recommendations: {
            score_optimisation: 85,
            recommendations: [
              {
                id: "1",
                title: "Negocia√ß√£o Salarial",
                description: "Seu sal√°rio est√° 15% abaixo da m√©dia do mercado para sua posi√ß√£o",
                impact: "high",
                priority: "important"
              },
              {
                id: "2", 
                title: "Otimiza√ß√£o de Benef√≠cios",
                description: "Considere negociar benef√≠cios adicionais como PLR ou a√ß√µes",
                impact: "medium",
                priority: "normal"
              }
            ]
          },
          confidence: 0.85
        },
        scanId: "test-scan-id",
        timestamp: Date.now()
      }
    };

    console.log('üìä Structure de la r√©ponse API:');
    console.log(JSON.stringify(mockResponse, null, 2));

    console.log('\nüîç Points cl√©s:');
    console.log('- recommendations est un objet avec score_optimisation et recommendations[]');
    console.log('- recommendations.recommendations est un tableau');
    console.log('- Chaque recommandation a id, title, description, impact, priority');

  } catch (error) {
    console.error('‚ùå Erreur:', error);
  }
}

testAPIResponse().catch(console.error); 