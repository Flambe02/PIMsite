import 'dotenv/config';
import { sanityClient, queries } from '@/lib/sanity/config';

console.log('üéâ Test final de la migration Sanity Blog');
console.log('==========================================\n');

async function testCompleteMigration() {
  try {
    // Test 1: Connexion √† Sanity
    console.log('üì° Test 1: Connexion √† Sanity');
    const testConnection = await sanityClient.fetch('*[_type == "post"][0...1]');
    console.log('‚úÖ Connexion r√©ussie');
    console.log(`üìä Articles trouv√©s: ${testConnection?.length || 0}\n`);

    // Test 2: R√©cup√©ration des articles BR
    console.log('üáßüá∑ Test 2: Articles Br√©sil');
    const articlesBR = await sanityClient.fetch(queries.getArticlesByCountry, { country: 'br' });
    console.log(`üìä Articles BR: ${articlesBR?.length || 0}`);
    
    if (articlesBR && articlesBR.length > 0) {
      const firstArticle = articlesBR[0];
      console.log('üìù Premier article BR:');
      console.log(`   - Titre: ${firstArticle.title}`);
      console.log(`   - Slug: ${firstArticle.slug} (type: ${typeof firstArticle.slug})`);
      console.log(`   - Pays: ${firstArticle.country}`);
      console.log(`   - Date: ${firstArticle.publishedAt}`);
      
      if (typeof firstArticle.slug === 'string') {
        console.log('‚úÖ Slug est bien une string !');
      } else {
        console.log('‚ùå Probl√®me avec le slug !');
      }
    }
    console.log('');

    // Test 3: R√©cup√©ration des articles FR
    console.log('üá´üá∑ Test 3: Articles France');
    const articlesFR = await sanityClient.fetch(queries.getArticlesByCountry, { country: 'fr' });
    console.log(`üìä Articles FR: ${articlesFR?.length || 0}\n`);

    // Test 4: Test d'un article sp√©cifique
    console.log('üîç Test 4: Article sp√©cifique');
    if (articlesBR && articlesBR.length > 0) {
      const slug = articlesBR[0].slug;
      const article = await sanityClient.fetch(queries.getArticleBySlug, { slug });
      if (article) {
        console.log(`‚úÖ Article trouv√©: ${article.title}`);
        console.log(`   - Slug: ${article.slug}`);
        console.log(`   - Body pr√©sent: ${article.body ? 'Oui' : 'Non'}`);
      } else {
        console.log('‚ùå Article non trouv√©');
      }
    }
    console.log('');

    // Test 5: Configuration
    console.log('üîß Test 5: Configuration');
    console.log(`üì¶ Project ID: ${process.env.NEXT_PUBLIC_SANITY_PROJECT_ID}`);
    console.log(`üóÑÔ∏è Dataset: ${process.env.NEXT_PUBLIC_SANITY_DATASET}`);
    console.log(`üåê API Version: ${process.env.NEXT_PUBLIC_SANITY_API_VERSION || '2025-07-29'}`);
    console.log('');

    // Test 6: URLs de test
    console.log('üîó Test 6: URLs de test');
    console.log('   ‚Ä¢ Sanity Studio: http://localhost:3000/studio');
    console.log('   ‚Ä¢ Blog BR: http://localhost:3000/br/blog');
    console.log('   ‚Ä¢ Blog FR: http://localhost:3000/fr/blog');
    
    if (articlesBR && articlesBR.length > 0) {
      const slug = articlesBR[0].slug;
      console.log(`   ‚Ä¢ Article d√©tail: http://localhost:3000/br/blog/${slug}`);
    }
    console.log('');

    // Test 7: R√©sum√© final
    console.log('üìä R√©sum√© final:');
    console.log(`   ‚úÖ Connexion Sanity: OK`);
    console.log(`   ‚úÖ Articles BR: ${articlesBR?.length || 0}`);
    console.log(`   ‚úÖ Articles FR: ${articlesFR?.length || 0}`);
    console.log(`   ‚úÖ Format slug: ${typeof articlesBR?.[0]?.slug === 'string' ? 'OK' : 'ERREUR'}`);
    console.log(`   ‚úÖ Serveur Next.js: http://localhost:3000`);
    console.log('');

    if (articlesBR && articlesBR.length > 0) {
      console.log('üéâ MIGRATION R√âUSSIE !');
      console.log('   Le blog Sanity est compl√®tement fonctionnel !');
      console.log('   Vous pouvez maintenant:');
      console.log('   ‚Ä¢ Cr√©er des articles via Sanity Studio');
      console.log('   ‚Ä¢ Voir les articles sur /br/blog');
      console.log('   ‚Ä¢ Naviguer vers les d√©tails d\'articles');
    } else {
      console.log('‚ö†Ô∏è Migration termin√©e mais aucun article trouv√©');
      console.log('   Cr√©ez un article via Sanity Studio pour tester');
    }

  } catch (error) {
    console.error('‚ùå Erreur lors du test:', error);
  }
}

testCompleteMigration(); 